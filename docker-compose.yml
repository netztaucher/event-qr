version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6-alpine
    container_name: event-qr-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_DATABASE: event-qr
    volumes:
      - mongodb_data:/data/db
      - ./docker/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - event-qr-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s

  # Event-QR Application
  event-qr:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: event-qr-app
    restart: unless-stopped
    depends_on:
      mongodb:
        condition: service_healthy
    environment:
      - NODE_ENV=production
      - DB_URL=mongodb://mongodb:27017/event-qr
      - JWT_SECRET=${JWT_SECRET:-your-secure-jwt-secret-change-this}
      - PORT=5000
    volumes:
      - ./google-credentials.json:/app/backend/google.json:ro
      - event_qr_logs:/app/logs
      - event_qr_uploads:/app/uploads
    networks:
      - event-qr-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: event-qr-nginx
    restart: unless-stopped
    depends_on:
      - event-qr
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/ssl:/etc/nginx/ssl:ro
    networks:
      - event-qr-network

networks:
  event-qr-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
  event_qr_logs:
    driver: local
  event_qr_uploads:
    driver: local